<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    读取配置文件-->
    <context:property-placeholder location="classpath:config/jdbc.properties"/>

    <!--    配置druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${druidJdbc.url}"/>
        <property name="username" value="${druidJdbc.username}"/>
        <property name="password" value="${druidJdbc.password}"/>
        <property name="maxActive" value="${druidJdbc.maxActive}"/>
    </bean>

    <!--    动态代理对象 对象引用是dao接口名首字母小写-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--创建接口对象的代理类 不用声明对象引用 对象引用是dao接口名首字母小写-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.kny.crm.settings.dao"/>
        <!--            会扫描value指定的包下所有的接口 并创建这些接口的代理类-->
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.kny.crm.workbench.dao"/>
    </bean>
    <!--扫描业务层注解-->
    <context:component-scan base-package="com.kny.crm.*.service" />

    <!--注册事务驱动-->
    <bean id="transactionalManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--事务通知-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionalManager">
        <tx:attributes>                       <!--默认包括运行时异常-->
            <tx:method name="saveActivity"/>
            <tx:method name="delActivityList"/>
            <tx:method name="updateActivity"/>
            <tx:method name="saveBindAct"/>
            <tx:method name="convert"/>
            <tx:method name="saveTran"/>
            <tx:method name="changeStage"/>
        </tx:attributes>
    </tx:advice>
    <!--事务通知切入点定义-->
    <aop:config>
        <aop:pointcut id="servicePointcut" expression="execution(* *..service..*.*(..))"/>
        <!--声明增强器 ：通知和切入点的组合-->
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="servicePointcut" />
    </aop:config>
</beans>